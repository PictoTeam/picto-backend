services:
  postgres:
    image: 'postgres:17.5-alpine'
    environment:
      - 'POSTGRES_DB=${DATABASE_NAME:-picto}'
      - 'POSTGRES_USER=${DATABASE_USER:-postgres}'
      - 'POSTGRES_PASSWORD=${DATABASE_PASSWORD:?Database password must be set}'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER:-postgres} -d ${DATABASE_NAME:-picto}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - picto-network
    # Do not expose ports in production - only internal communication
    # ports:
    #   - '5432:5432'

  app:
    image: ghcr.io/pictoteam/picto-backend:latest
    environment:
      - 'SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/${DATABASE_NAME:-picto}'
      - 'SPRING_DATASOURCE_USERNAME=${DATABASE_USER:-postgres}'
      - 'SPRING_DATASOURCE_PASSWORD=${DATABASE_PASSWORD:?Database password must be set}'
      - 'SPRING_PROFILES_ACTIVE=prod'
      - 'JAVA_OPTS=-Xmx512m -Xms256m -XX:+UseG1GC -XX:+UseContainerSupport'
      - 'SERVER_PORT=8080'
    ports:
      - '${APP_PORT:-8080}:8080'
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - picto-network
    deploy:
      resources:
        limits:
          memory: 768M
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.5'

  nginx:
    image: 'nginx:1.25-alpine'
    ports:
      - '${NGINX_PORT:-80}:80'
      - '${NGINX_SSL_PORT:-443}:443'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      app:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    networks:
      - picto-network

volumes:
  postgres_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  picto-network:
    driver: bridge
